<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- ############################################################# -->
	<!-- definicion del lanzador y repositorio de trabajos -->
	<beans:import resource="../applicationContext.xml" />
	
	<!-- ############################################################# -->
 	<!-- ############################################################# -->
	<!-- transformamos el tesauro mesh para que pueda ser procesado por la herramienta de formalización-->
	<batch:job id="conversionToSkosJob">
	    <!-- (1) cargamos el tesauro en un tdb2-->
		<batch:step id="loadInTDB2" next="loadTDBModelIntoJobContext">
			<batch:tasklet ref="loadInTDB2_tasklet"/>
		</batch:step>
		<!-- (1) cargamos el tesauro en un tdb2-->
		<batch:step id="loadTDBModelIntoJobContext" next="addBTNTrelations">
			<batch:tasklet ref="loadTDBModelIntoJobContext_tasklet"/>
		</batch:step>
		<!-- (2) añadimos todas las relaciones bt/nt que faltan (estan en un solo sentido) -->
		<batch:step id="addBTNTrelations" next="exportFromTDB2">
			<batch:tasklet ref="addBTNTrelations_tasklet"/>
		</batch:step>
		<!-- (2) exportamos el tesauro en un tdb2-->
		<batch:step id="exportFromTDB2">
			<batch:tasklet ref="exportFromTDB2_tasklet"/>
		</batch:step>		
	</batch:job>
		
	<!-- ############################################################# -->
	<!-- (1) cargamos el tesauro en un tdb2 -->
	<beans:bean id="loadInTDB2_tasklet" class="rdfProcessing.Tasklet_RDF_To_TDB2"> 
		<beans:property name="sourceRDF" value="data/input/thesauri/mesh2018.ttl" /> 
		<beans:property name="destinationTDB" value="data/temp/tdb/mesh" />
		<beans:property name="sourceFormat" value="TURTLE" />
	</beans:bean>	
	
	<!-- ############################################################# -->
	<!-- (1a) carga el tdb y lo deja en el modelo indicado -->
	<beans:bean id="loadTDBModelIntoJobContext_tasklet" class="rdfProcessing.Tasklet_LoadRDFModelIntoJobContext"> 
		<beans:property name="model" ref="beanModelContainer" />
		<beans:property name="sourceTDB" value="data/temp/tdb/mesh" /> 
	</beans:bean>
	
	<!-- ############################################################# -->
	<!-- (2) añadimos todas las relaciones bt/nt que faltan (estan en un solo sentido) -->
	<beans:bean id="addBTNTrelations_tasklet" class="thesaurusFormalizer.rdfManager.Tasklet_GenerateInverseNTBT"> 
		<beans:property name="model" ref="beanModelContainer" />
	</beans:bean>
	
	<!-- ############################################################# -->
	<!-- (2) exportamos el tesauro de un tdb2 -->
	<beans:bean id="exportFromTDB2_tasklet" class="rdfProcessing.Tasklet_TDB2_To_RDF"> 
		<beans:property name="destRDFFile" value="data/input/thesauri/mesh2018bt.ttl" /> 
		<beans:property name="sourceTDBDir" value="data/temp/tdb/mesh" />
		<beans:property name="format" value="TURTLE" />
	</beans:bean>
	
	<!-- ############################################################# -->
	<!-- ############################################################# -->
	<!-- Modelo donde se almacenan los datos del tesauro para su formalizacion, usado en muchos pasos -->
	<beans:bean id="beanModelContainer" class="rdfProcessing.Bean_ModelContainer"/>
	
</beans:beans>
