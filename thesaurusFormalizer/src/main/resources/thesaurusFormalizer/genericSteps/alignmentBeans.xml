<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
 
 	<!-- ############################################################# -->
	<!-- definicion del lanzador y repositorio de trabajos -->
	<beans:import resource="../../applicationContext.xml" />
	
	<!-- ############################################################# -->
	<!-- fichero de configuración del que se sacan las propiedades comunes de los bean -->
 	<context:property-placeholder location="file:./src/main/resources/thesaurusFormalizer/genericSteps/genericSteps.properties" ignore-unresolvable="true"/>
 	
	<!-- ############################################################# -->
	<!-- ############################################################# -->
	<!-- (0) carga un fichero RDF en un tdb -->
	<beans:bean id="loadInTDB2_tasklet" class="rdfProcessing.Tasklet_RDF_To_TDB2"> 
		<beans:property name="sourceRDF" value="${original.thesaurus.file}" /> 
		<beans:property name="sourceFormat" value="${original.thesaurus.format}" />
		<beans:property name="destinationTDB" value="${temporal.tdb.dir}" />
	</beans:bean>
	
	<!-- ############################################################# -->
	<!-- (1a) carga el tdb y lo deja en el modelo indicado -->
	<beans:bean id="loadTDBModelIntoJobContext_tasklet" class="rdfProcessing.Tasklet_LoadRDFModelIntoJobContext"> 
		<beans:property name="model" ref="beanModelContainer" />
		<beans:property name="sourceTDB" value="${temporal.tdb.dir}" /> 
	</beans:bean>
	
	<!-- ############################################################# -->
	<!-- (1b) carga el fichero rdf y lo deja en el modelo indicado -->
	<beans:bean id="loadFileModelIntoJobContext_tasklet" class="rdfProcessing.Tasklet_LoadRDFModelIntoJobContext"> 
		<beans:property name="model" ref="beanModelContainer" />
		<beans:property name="sourceFile" value="${original.thesaurus.file}" />
	</beans:bean>
	
	<!-- ############################################################# -->
 	<!-- (2) Extrae el sustantivo principal de las etiquetas preferidas y alternativas de un tesauro en los idiomas indicados -->			
	<beans:bean id="extractLabel_reader" class="thesaurusFormalizer.extraction.ItemReader_Mem_ThesConceptLabelExtractor"> 
		<beans:property name="model" ref="beanModelContainer" />
	</beans:bean>
	<beans:bean id="extractLabel_writer" class="thesaurusFormalizer.extraction.ItemWriter_Mem_ThesConceptLabelExtractor"> 
		<beans:property name="model" ref="beanModelContainer" />
	</beans:bean>
	<beans:bean id="extractLabel_processor" class="thesaurusFormalizer.extraction.ItemProcessor_ThesConceptLabelExtractor"> 
		<beans:property name="langDependentExtractors">
			<beans:props>
				<beans:prop key="en">extractEnglishLabel_processor</beans:prop>
				<beans:prop key="es">extractSpanishLabel_processor</beans:prop>
				<beans:prop key="fr">extractFrenchLabel_processor</beans:prop>
			</beans:props>
		</beans:property>			
	</beans:bean>
	
	<!-- extractor de etiquetas en ingles, hace el procesamiento completo -->
	<beans:bean id="extractEnglishLabel_processor" class="thesaurusFormalizer.extraction.ItemSubProcessor_EnglishLabelExtractor"/> 
	<!-- extractor de etiquetas en ingles, hace el procesamiento completo -->
	<beans:bean id="extractSpanishLabel_processor" class="thesaurusFormalizer.extraction.ItemSubProcessor_SpanishLabelExtractor"/> 
	<!-- extractor de etiquetas en ingles, hace el procesamiento completo -->
	<beans:bean id="extractFrenchLabel_processor" class="thesaurusFormalizer.extraction.ItemSubProcessor_FrenchLabelExtractor"/> 
	
	<!-- ############################################################# -->
 	<!-- (3) alinea las etiquetas ya extraidas (originales y procesadas) con wordnet en los idiomas indicados-->			
	<beans:bean id="alignSynset_reader" class="thesaurusFormalizer.alignment.wordnetMatch.ItemReader_Mem_ThesConceptOntologyAlignment"> 
		<beans:property name="model" ref="beanModelContainer" />
	</beans:bean>
	<beans:bean id="alignSynset_writer" class="thesaurusFormalizer.alignment.wordnetMatch.ItemWriter_Mem_ThesConceptOntologyAlignment"> 
		<beans:property name="model" ref="beanModelContainer" />
	</beans:bean>
	<beans:bean id="alignSynset_processor" class="thesaurusFormalizer.alignment.wordnetMatch.ItemProcessor_ThesConceptOntologyAlignment"> 
		<beans:property name="langDependentExtractors">
			<beans:props>
				<beans:prop key="en">alignEnglishLabel_processor</beans:prop>
				<beans:prop key="es">alignSpanishLabel_processor</beans:prop>
				<beans:prop key="fr">alignFrenchLabel_processor</beans:prop>
			</beans:props>
		</beans:property>			
	</beans:bean>
	
	<!-- alineador de etiquetas en ingles -->
	<beans:bean id="alignEnglishLabel_processor" class="thesaurusFormalizer.alignment.wordnetMatch.ItemSubProcessor_EnglishConceptWordNetAlignment"/> 
	<!-- alineador de etiquetas en español -->
	<beans:bean id="alignSpanishLabel_processor" class="thesaurusFormalizer.alignment.wordnetMatch.ItemSubProcessor_ConceptOpenWordNetAlignment"> 
		<beans:property name="languageSynsetHash" value="${wordnet.spanish.synset.hash}" />
	</beans:bean>
	<!-- alineador de etiquetas en frances -->
	<beans:bean id="alignFrenchLabel_processor" class="thesaurusFormalizer.alignment.wordnetMatch.ItemSubProcessor_ConceptOpenWordNetAlignment"> 
		<beans:property name="languageSynsetHash" value="${wordnet.french.synset.hash}" />
	</beans:bean>
	
	<!-- ############################################################# -->
 	<!-- (4) nos quedamos los synsets de una etiqueta comunes a los distintos idiomas -->			
	<beans:bean id="filterSynset_processor" class="thesaurusFormalizer.alignment.senseSelection.ItemProcessor_MultilingualSynsetSelection"/> 
	
	<!-- ############################################################# -->
	<!-- (5) filtramos los synsets en función de la estructura del tesauro y wordnet -->			
	<beans:bean id="filterhierarchySynset_processor" class="thesaurusFormalizer.alignment.senseSelection.ItemProcessor_ContextSynsetSelection"> 
	
		<beans:property name="model" ref="beanModelContainer" />		
	</beans:bean> 	
	<!-- ############################################################# -->
	<!-- (6) dado un synset seleccionado elegimos el equivalente en dolce -->			
	<beans:bean id="dolceAlignUsingWNHierarchy_processor" class="thesaurusFormalizer.alignment.dolceMatch.ItemProcessor_DolceMatchSelection"> 
		<beans:property name="WNDolceAlignHash" value="${wordnet.dolce.alignment.hash}" />		
	</beans:bean>
	
	<!-- ############################################################# -->
 	<!-- (7) seleccionamos la relación de dolce mas adecuada para reemplazar NT y RT-->	
	<beans:bean id="selectDolceRelation_processor" class="thesaurusFormalizer.alignment.relationsRedefinition.ItemProcessor_RelationsRedefiner"> 
		<beans:property name="dolceModel" value="${dolce.file}" />		
	</beans:bean>
	
	<!-- ############################################################# -->
 	<!-- (8) usamos dolce para encontrar posibles relaciones entre conceptos del tesauro relacionados con BT/NT-->	
 	<!-- Este paso esta sin terminar del todo, busca nuevas relaciones BT/NT que actualmente no están explicitas
		     Esta pesando para sugerir cambios en el tesauro -->
    <!-- 	<beans:bean id="detectNewRelations_processor" class="thesaurusFormalizer.alignment.relationsRedefinition.ItemProcessor_RelationsCreator"/>  -->
	
	<!-- ############################################################# -->
	<!-- (9a) guardamos el tesauro extendido con toda la información encontrada en el tdb sin exportar a fichero -->
	<beans:bean id="saveTDBAlignFromJobContext_tasklet" class="rdfProcessing.Tasklet_SaveRDFModelFromJobContext"> 
		<beans:property name="model" ref="beanModelContainer" />
		<beans:property name="namespaces">
			<beans:props>
				<beans:prop key="skos">http://www.w3.org/2004/02/skos/core#</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- ############################################################# -->
	<!-- (9b) guardamos el tesauro extendido con toda la información encontrada en un fichero -->
	<beans:bean id="saveFileAlignFromJobContext_tasklet" class="rdfProcessing.Tasklet_SaveRDFModelFromJobContext" parent ="saveTDBAlignFromJobContext_tasklet"> 
		<beans:property name="destCol" value="${enriched.thesaurus.file}" />
	</beans:bean>
	
	<!-- ############################################################# -->
	<!-- ############################################################# -->
	<!-- Modelo donde se almacenan los datos del tesauro para su formalizacion, usado en muchos pasos -->
	<beans:bean id="beanModelContainer" class="rdfProcessing.Bean_ModelContainer"/>
	
	<!-- ############################################################# -->
	<!-- lector y escritor generico usado en muchos pasos -->
	<beans:bean id="modelMemory_reader" class="rdfProcessing.ItemReader_Mem_To_Resource"> 
		<beans:property name="model" ref="beanModelContainer" />
	</beans:bean>
	<beans:bean id="empty_writer" class="rdfProcessing.ItemWriter_Resource_EmptyProcess"/> 
	
</beans:beans>